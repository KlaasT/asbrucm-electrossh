name: Build and Release Snapshots

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14'

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm install --verbose
          echo "Dependencies installed successfully."

      - name: Build CSS
        run: |
          echo "Building CSS..."
          npm run build:css
          echo "CSS build completed."

      - name: Build app
        run: |
          echo "Building app..."
          npm run build
          echo "App build completed."

      - name: Install updated p7zip (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Installing updated p7zip..."
          sudo apt-get update && sudo apt-get install -y p7zip-full
          echo "p7zip installed."

      - name: Set short sha
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "Building for Windows..."
          npm run dist
          echo "Windows build completed."
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          ELECTRON_BUILDER_CACHE: true

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Building for Linux..."
          npm run dist:linux
          echo "Linux build completed."
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          ELECTRON_BUILDER_CACHE: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: asbru-cm-electro-ssh-${{ matrix.os }}-${{ SHORT_SHA }}
          path: |
            dist/*.exe  # Windows installer
            dist/*.AppImage  # Linux AppImage
            dist/*.deb  # Linux deb
            !dist/builder-debug.yml  # Exclude debug file
            !dist/index.html  # Exclude Vite output
            !dist/assets/**  # Exclude Vite assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release snapshot
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: snapshot-${{ SHORT_SHA }}
          name: Snapshot Release ${{ SHORT_SHA }}
          draft: false
          files: |
            dist/*.exe
            dist/*.AppImage
            dist/*.deb
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
